<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.rick.cryptcloud.dao.RoleFileMapper">
  <resultMap id="BaseResultMap" type="com.rick.cryptcloud.DO.RoleFile">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="rolename" jdbcType="VARCHAR" property="rolename" />
    <result column="filename" jdbcType="VARCHAR" property="filename" />
    <result column="operation" jdbcType="VARCHAR" property="operation" />
    <result column="version_file" jdbcType="INTEGER" property="versionFile" />
    <result column="version_role" jdbcType="INTEGER" property="versionRole" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from role_file
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.rick.cryptcloud.DO.RoleFile">
    insert into role_file (rolename, filename, 
      operation, version_file, version_role
      )
    values (#{rolename,jdbcType=VARCHAR}, #{filename,jdbcType=VARCHAR}, 
      #{operation,jdbcType=VARCHAR}, #{versionFile,jdbcType=INTEGER}, #{versionRole,jdbcType=INTEGER}
      )
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.rick.cryptcloud.DO.RoleFile">
    update role_file
    set rolename = #{rolename,jdbcType=VARCHAR},
      filename = #{filename,jdbcType=VARCHAR},
      operation = #{operation,jdbcType=VARCHAR},
      version_file = #{versionFile,jdbcType=INTEGER},
      version_role = #{versionRole,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select id, rolename, filename, operation, version_file, version_role
    from role_file
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    select id, rolename, filename, operation, version_file, version_role
    from role_file
  </select>
</mapper>