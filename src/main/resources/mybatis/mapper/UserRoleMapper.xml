<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.rick.cryptcloud.dao.UserRoleMapper">
  <resultMap id="BaseResultMap" type="com.rick.cryptcloud.DO.UserRole">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="rolename" jdbcType="VARCHAR" property="rolename" />
    <result column="version" jdbcType="VARCHAR" property="version" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from user_role
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.rick.cryptcloud.DO.UserRole">
    insert into user_role (id, username, rolename, 
      version)
    values (#{id,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{rolename,jdbcType=VARCHAR}, 
      #{version,jdbcType=VARCHAR})
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.rick.cryptcloud.DO.UserRole">
    update user_role
    set username = #{username,jdbcType=VARCHAR},
      rolename = #{rolename,jdbcType=VARCHAR},
      version = #{version,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select id, username, rolename, version
    from user_role
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    select id, username, rolename, version
    from user_role
  </select>
</mapper>