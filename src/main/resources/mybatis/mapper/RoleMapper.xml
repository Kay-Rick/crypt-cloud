<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.rick.cryptcloud.dao.RoleMapper">
  <resultMap id="BaseResultMap" type="com.rick.cryptcloud.DO.Role">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="rolename" jdbcType="VARCHAR" property="rolename" />
    <result column="public_key" jdbcType="LONGVARCHAR" property="publicKey" />
    <result column="private_key" jdbcType="LONGVARCHAR" property="privateKey" />
    <result column="sign_public" jdbcType="LONGVARCHAR" property="signPublic" />
    <result column="sign_private" jdbcType="LONGVARCHAR" property="signPrivate" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from role
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.rick.cryptcloud.DO.Role">
    insert into role (rolename, public_key, 
      private_key, sign_public, sign_private
      )
    values (#{rolename,jdbcType=VARCHAR}, #{publicKey,jdbcType=LONGVARCHAR}, 
      #{privateKey,jdbcType=LONGVARCHAR}, #{signPublic,jdbcType=LONGVARCHAR}, #{signPrivate,jdbcType=LONGVARCHAR}
      )
  </insert>
  <update id="updateByRoleName" parameterType="com.rick.cryptcloud.DO.Role">
    update role
    set public_key = #{publicKey,jdbcType=LONGVARCHAR},
      private_key = #{privateKey,jdbcType=LONGVARCHAR},
      sign_public = #{signPublic,jdbcType=LONGVARCHAR},
      sign_private = #{signPrivate,jdbcType=LONGVARCHAR}
    where rolename = #{rolename,jdbcType=VARCHAR}
  </update>
  <select id="selectByRoleName" parameterType="java.lang.String" resultMap="BaseResultMap">
    select id, rolename, public_key, private_key, sign_public, sign_private
    from role
    where rolename = #{rolename,jdbcType=VARCHAR}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    select id, rolename, public_key, private_key, sign_public, sign_private
    from role
  </select>
</mapper>